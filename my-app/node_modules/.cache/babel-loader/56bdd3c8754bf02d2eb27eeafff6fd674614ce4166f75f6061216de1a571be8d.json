{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 5000\n});\nexport async function isOrgCheck(setterFunc) {\n  const token = localStorage.getItem(\"loginToken\");\n  try {\n    console.log(token);\n    const authStr = \"Bearer \".concat(token);\n    const response = await api.get('/orgcheck', {\n      headers: {\n        Authorization: authStr\n      }\n    });\n    setterFunc(response.data.isOrg);\n  } catch (err) {\n    console.log(\"error trying to get response for org check\");\n  }\n}","map":{"version":3,"names":["axios","api","create","baseURL","timeout","isOrgCheck","setterFunc","token","localStorage","getItem","console","log","authStr","concat","response","get","headers","Authorization","data","isOrg","err"],"sources":["H:/VolontirajReact2/VolontirajReact2/Volont/my-app/src/components/functions.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  timeout: 5000,\r\n});\r\n\r\nexport async function isOrgCheck(setterFunc){\r\n    const token = localStorage.getItem(\"loginToken\");\r\n    try {\r\n        console.log(token);\r\n        const authStr = \"Bearer \".concat(token);\r\n        const response = await api.get('/orgcheck', {headers: {Authorization: authStr}});\r\n        setterFunc(response.data.isOrg);\r\n    }\r\n    catch (err) {\r\n        console.log(\"error trying to get response for org check\");\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,eAAeC,UAAUA,CAACC,UAAU,EAAC;EACxC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAChD,IAAI;IACAC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,MAAMK,OAAO,GAAG,SAAS,CAACC,MAAM,CAACN,KAAK,CAAC;IACvC,MAAMO,QAAQ,GAAG,MAAMb,GAAG,CAACc,GAAG,CAAC,WAAW,EAAE;MAACC,OAAO,EAAE;QAACC,aAAa,EAAEL;MAAO;IAAC,CAAC,CAAC;IAChFN,UAAU,CAACQ,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;EACnC,CAAC,CACD,OAAOC,GAAG,EAAE;IACRV,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;EAC7D;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}