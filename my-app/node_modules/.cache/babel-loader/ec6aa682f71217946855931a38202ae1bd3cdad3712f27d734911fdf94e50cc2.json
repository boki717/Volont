{"ast":null,"code":"var _jsxFileName = \"H:\\\\VolontirajReact\\\\VolontirajReact\\\\my-app\\\\src\\\\PostContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostContext = /*#__PURE__*/createContext({\n  posts: [],\n  addPost: () => {}\n});\nexport const PostProvider = ({\n  children\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const sendPost = async (post, e) => {\n    e.preventDefault();\n    try {\n      const response = await api.post('/newpost', post);\n      console.log('New post response:', response.data);\n      alert(response.data.msg);\n    } catch (err) {\n      console.error('New post error:', err);\n      alert('New post error');\n    }\n  };\n  const addPost = post => {\n    setPosts(prevPosts => [...prevPosts, post]);\n    // Ovde mozda moze da se doda čuvanje posta u bazu\n    sendPost(post);\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: {\n      posts,\n      addPost\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PostProvider, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = PostProvider;\nexport const usePosts = () => {\n  _s2();\n  return useContext(PostContext);\n};\n_s2(usePosts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"PostProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","PostContext","posts","addPost","PostProvider","children","_s","setPosts","sendPost","post","e","preventDefault","response","api","console","log","data","alert","msg","err","error","prevPosts","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","usePosts","_s2","$RefreshReg$"],"sources":["H:/VolontirajReact/VolontirajReact/my-app/src/PostContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\r\n\r\nconst PostContext = createContext({\r\n  posts: [],\r\n  addPost: () => {}\r\n});\r\n\r\nexport const PostProvider = ({ children }) => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  const sendPost = async (post, e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await api.post('/newpost', post);\r\n      console.log('New post response:', response.data);\r\n      alert(response.data.msg);\r\n    } catch (err) {\r\n      console.error('New post error:', err);\r\n      alert('New post error');\r\n    }\r\n  };\r\n\r\n  const addPost = (post) => {\r\n    setPosts((prevPosts) => [...prevPosts, post]);\r\n    // Ovde mozda moze da se doda čuvanje posta u bazu\r\n    sendPost(post);\r\n  };\r\n\r\n  return (\r\n    <PostContext.Provider value={{ posts, addPost }}>\r\n      {children}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport const usePosts = () => {\r\n  return useContext(PostContext);\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EAChCM,KAAK,EAAE,EAAE;EACTC,OAAO,EAAEA,CAAA,KAAM,CAAC;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMW,QAAQ,GAAG,MAAAA,CAAOC,IAAI,EAAEC,CAAC,KAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACJ,IAAI,CAAC,UAAU,EAAEA,IAAI,CAAC;MACjDK,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAChDC,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACE,GAAG,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZL,OAAO,CAACM,KAAK,CAAC,iBAAiB,EAAED,GAAG,CAAC;MACrCF,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF,CAAC;EAED,MAAMd,OAAO,GAAIM,IAAI,IAAK;IACxBF,QAAQ,CAAEc,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEZ,IAAI,CAAC,CAAC;IAC7C;IACAD,QAAQ,CAACC,IAAI,CAAC;EAChB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACqB,QAAQ;IAACC,KAAK,EAAE;MAAErB,KAAK;MAAEC;IAAQ,CAAE;IAAAE,QAAA,EAC7CA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrB,EAAA,CA1BWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA4BzB,OAAO,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,OAAOhC,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAAC6B,GAAA,CAFWD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}