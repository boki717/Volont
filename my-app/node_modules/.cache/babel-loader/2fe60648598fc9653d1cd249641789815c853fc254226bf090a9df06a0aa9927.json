{"ast":null,"code":"var _jsxFileName = \"H:\\\\VolontirajReact2\\\\VolontirajReact2\\\\Volont\\\\my-app\\\\src\\\\components\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { usePosts } from '../PostContext';\nimport './PostDetails.css'; // Ensure this matches your file name\nimport NotLoggedIn from \"./NotAllowed\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const token = localStorage.getItem(\"loginToken\");\n  const {\n    id\n  } = useParams(); // Get the post id from the URL\n  const {\n    posts\n  } = usePosts(); // Access posts from context\n  const [imageUrl, setImageUrl] = useState('');\n\n  // Find the post by id\n\n  useEffect(() => {\n    var _post;\n    if ((_post = post) !== null && _post !== void 0 && _post.photo) {\n      const url = URL.createObjectURL(post.photo);\n      setImageUrl(url);\n      return () => URL.revokeObjectURL(url); // Cleanup URL\n    }\n  }, [post]);\n  if (token) {\n    const post = posts.find(post => post.id === parseInt(id));\n    const formattedDate = new Date(post.date).toLocaleDateString(); // Format the date\n  }\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(NotLoggedIn, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Post not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 10\n      }, this), \" \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), \" \", post.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Post\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Participants Needed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), \" \", post.participants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"1IcsJhTSa9B6ToM3GapSZm2Quyk=\", false, function () {\n  return [useParams, usePosts];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","usePosts","NotLoggedIn","jsxDEV","_jsxDEV","PostDetail","_s","token","localStorage","getItem","id","posts","imageUrl","setImageUrl","_post","post","photo","url","URL","createObjectURL","revokeObjectURL","find","parseInt","formattedDate","Date","date","toLocaleDateString","fileName","_jsxFileName","lineNumber","columnNumber","children","className","title","description","src","alt","participants","_c","$RefreshReg$"],"sources":["H:/VolontirajReact2/VolontirajReact2/Volont/my-app/src/components/PostDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { usePosts } from '../PostContext';\r\nimport './PostDetails.css'; // Ensure this matches your file name\r\nimport NotLoggedIn from \"./NotAllowed\";\r\n\r\nconst PostDetail = () => {\r\n  const token = localStorage.getItem(\"loginToken\");\r\n  const { id } = useParams(); // Get the post id from the URL\r\n  const { posts } = usePosts(); // Access posts from context\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  // Find the post by id\r\n  \r\n\r\n  useEffect(() => {\r\n    if (post?.photo) {\r\n      const url = URL.createObjectURL(post.photo);\r\n      setImageUrl(url);\r\n      return () => URL.revokeObjectURL(url); // Cleanup URL\r\n    }\r\n  }, [post]);\r\n  if (token){\r\n    const post = posts.find(post => post.id === parseInt(id));\r\n    const formattedDate = new Date(post.date).toLocaleDateString(); // Format the date\r\n  }\r\n  \r\n  if (!token){\r\n    return(\r\n      <NotLoggedIn/>\r\n    );\r\n  }\r\n\r\n  if (!post) {\r\n    return <p>Post not found.</p>;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"post-detail\">\r\n      <h1>{post.title}</h1>\r\n      <p><strong>Date:</strong> {formattedDate}</p>\r\n      <p><strong>Description:</strong> {post.description}</p>\r\n      {imageUrl && (\r\n        <img src={imageUrl} alt=\"Post\" className=\"post-image\" />\r\n      )}\r\n      <p><strong>Participants Needed:</strong> {post.participants}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}