{"ast":null,"code":"var _jsxFileName = \"H:\\\\VolontirajReact2\\\\VolontirajReact2\\\\Volont\\\\my-app\\\\src\\\\components\\\\PostDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { usePosts } from '../PostContext';\nimport './PostDetails.css'; // Ensure this matches your file name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the post id from the URL\n  const {\n    posts\n  } = usePosts(); // Access posts from context\n  const [imageUrl, setImageUrl] = useState('');\n\n  // Find the post by id\n  const post = posts.find(post => post.id === parseInt(id));\n  useEffect(() => {\n    if (post !== null && post !== void 0 && post.photo) {\n      const url = URL.createObjectURL(post.photo);\n      setImageUrl(url);\n      return () => URL.revokeObjectURL(url); // Cleanup URL\n    }\n  }, [post]);\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Post not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  const formattedDate = new Date(post.date).toLocaleDateString(); // Format the date\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-detail\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this), \" \", formattedDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), \" \", post.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: \"Post\",\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Participants Needed:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 10\n      }, this), \" \", post.participants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"1IcsJhTSa9B6ToM3GapSZm2Quyk=\", false, function () {\n  return [useParams, usePosts];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","usePosts","jsxDEV","_jsxDEV","PostDetail","_s","id","posts","imageUrl","setImageUrl","post","find","parseInt","photo","url","URL","createObjectURL","revokeObjectURL","children","fileName","_jsxFileName","lineNumber","columnNumber","formattedDate","Date","date","toLocaleDateString","className","title","description","src","alt","participants","_c","$RefreshReg$"],"sources":["H:/VolontirajReact2/VolontirajReact2/Volont/my-app/src/components/PostDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { usePosts } from '../PostContext';\r\nimport './PostDetails.css'; // Ensure this matches your file name\r\n\r\nconst PostDetail = () => {\r\n  const { id } = useParams(); // Get the post id from the URL\r\n  const { posts } = usePosts(); // Access posts from context\r\n  const [imageUrl, setImageUrl] = useState('');\r\n\r\n  // Find the post by id\r\n  const post = posts.find(post => post.id === parseInt(id));\r\n\r\n  useEffect(() => {\r\n    if (post?.photo) {\r\n      const url = URL.createObjectURL(post.photo);\r\n      setImageUrl(url);\r\n      return () => URL.revokeObjectURL(url); // Cleanup URL\r\n    }\r\n  }, [post]);\r\n\r\n  if (!post) {\r\n    return <p>Post not found.</p>;\r\n  }\r\n\r\n  const formattedDate = new Date(post.date).toLocaleDateString(); // Format the date\r\n\r\n  return (\r\n    <div className=\"post-detail\">\r\n      <h1>{post.title}</h1>\r\n      <p><strong>Date:</strong> {formattedDate}</p>\r\n      <p><strong>Description:</strong> {post.description}</p>\r\n      {imageUrl && (\r\n        <img src={imageUrl} alt=\"Post\" className=\"post-image\" />\r\n      )}\r\n      <p><strong>Participants Needed:</strong> {post.participants}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}